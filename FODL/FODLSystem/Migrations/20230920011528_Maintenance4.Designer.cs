// <auto-generated />
using System;
using FODLSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FODLSystem.Migrations
{
    [DbContext(typeof(FODLSystemContext))]
    [Migration("20230920011528_Maintenance4")]
    partial class Maintenance4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FODLSystem.Models.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Status");

                    b.HasKey("ID");

                    b.ToTable("Companies");

                    b.HasData(
                        new { ID = 1, Code = "SMPC", Name = "Semirara Mining and Power Corporation", Status = "Active" }
                    );
                });

            modelBuilder.Entity("FODLSystem.Models.Component", b =>
                {
                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status");

                    b.HasKey("Code");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("FODLSystem.Models.Department", b =>
                {
                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime?>("DateModified");

                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Status");

                    b.HasKey("Code");

                    b.HasIndex("CompanyId");

                    b.ToTable("Departments");

                    b.HasData(
                        new { Code = "NA", CompanyId = 1, ID = 1, Name = "NOTSET", Status = "Deleted" }
                    );
                });

            modelBuilder.Entity("FODLSystem.Models.Dispenser", b =>
                {
                    b.Property<string>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<DateTime?>("DateModified");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LocationCode")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Status");

                    b.HasKey("No");

                    b.HasIndex("LocationCode");

                    b.ToTable("Dispensers");
                });

            modelBuilder.Entity("FODLSystem.Models.Driver", b =>
                {
                    b.Property<string>("IdNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime?>("DateModified");

                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Status");

                    b.HasKey("IdNumber");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("FODLSystem.Models.Equipment", b =>
                {
                    b.Property<string>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("DepartmentCode");

                    b.Property<string>("FuelCodeDiesel");

                    b.Property<string>("FuelCodeOil");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModelNo");

                    b.Property<string>("Name");

                    b.Property<string>("Status");

                    b.HasKey("No");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("FODLSystem.Models.FileUpload", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName");

                    b.Property<string>("Status");

                    b.Property<string>("UploadBy");

                    b.Property<DateTime>("UploadDate");

                    b.HasKey("ID");

                    b.ToTable("FileUploads");
                });

            modelBuilder.Entity("FODLSystem.Models.FuelOil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchName");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DispenserCode")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("LubeTruckCode")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<int>("OldId");

                    b.Property<DateTime>("OriginalDate");

                    b.Property<string>("ReferenceNo");

                    b.Property<string>("Shift");

                    b.Property<string>("SourceReferenceNo");

                    b.Property<string>("Status");

                    b.Property<DateTime>("TransactionDate");

                    b.Property<DateTime>("TransferDate");

                    b.Property<string>("TransferredBy");

                    b.HasKey("Id");

                    b.HasIndex("DispenserCode");

                    b.HasIndex("LubeTruckCode");

                    b.ToTable("FuelOils");
                });

            modelBuilder.Entity("FODLSystem.Models.FuelOilDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DetailNo");

                    b.Property<string>("DriverIdNumber");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("FuelOilId");

                    b.Property<string>("JobCardNo");

                    b.Property<string>("LocationNo");

                    b.Property<string>("OldDetailNo");

                    b.Property<int>("OldId");

                    b.Property<decimal?>("SMR");

                    b.Property<string>("Signature");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.HasIndex("DriverIdNumber");

                    b.HasIndex("EquipmentNo");

                    b.HasIndex("FuelOilId");

                    b.HasIndex("LocationNo");

                    b.ToTable("FuelOilDetails");
                });

            modelBuilder.Entity("FODLSystem.Models.FuelOilSubDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComponentCode")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<int>("FuelOilDetailId");

                    b.Property<string>("ItemNo")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("OldFuelOilDetailNo");

                    b.Property<int>("OldId");

                    b.Property<string>("Status");

                    b.Property<DateTime>("TimeInput");

                    b.Property<int>("VolumeQty");

                    b.HasKey("Id");

                    b.HasIndex("ComponentCode");

                    b.HasIndex("FuelOilDetailId");

                    b.HasIndex("ItemNo");

                    b.ToTable("FuelOilSubDetails");
                });

            modelBuilder.Entity("FODLSystem.Models.Item", b =>
                {
                    b.Property<string>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Description2");

                    b.Property<string>("DescriptionLiquidation");

                    b.Property<string>("DescriptionLiquidation2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status");

                    b.Property<string>("TypeFuel");

                    b.HasKey("No");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("FODLSystem.Models.Location", b =>
                {
                    b.Property<string>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<DateTime?>("DateModified");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("List")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("OfficeCode")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Status");

                    b.HasKey("No");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("FODLSystem.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Descriptions");

                    b.Property<string>("Status");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("FODLSystem.Models.LubeTruck", b =>
                {
                    b.Property<string>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Description");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LocationCode")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("OldId");

                    b.Property<string>("Status");

                    b.HasKey("No");

                    b.HasIndex("LocationCode");

                    b.ToTable("LubeTrucks");
                });

            modelBuilder.Entity("FODLSystem.Models.NoSeries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("LastNoUsed");

                    b.HasKey("Id");

                    b.ToTable("NoSeries");
                });

            modelBuilder.Entity("FODLSystem.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new { Id = 1, Name = "Admin", Status = "Active" },
                        new { Id = 2, Name = "User", Status = "Active" }
                    );
                });

            modelBuilder.Entity("FODLSystem.Models.SynchronizeInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("LastDownloaded");

                    b.Property<DateTime>("LastModifiedDate");

                    b.Property<string>("ModifiedBy");

                    b.HasKey("Id");

                    b.ToTable("SynchronizeInformations");
                });

            modelBuilder.Entity("FODLSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyAccess");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("DispenserAccess");

                    b.Property<string>("Domain");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("LubeAccess");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<int>("RoleId");

                    b.Property<string>("Status");

                    b.Property<string>("UserType");

                    b.Property<string>("Username")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentCode");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username", "Status")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL AND [Status] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1, CompanyAccess = "1", Domain = "SMCDACON", Email = "kcmalapit@semirarampc.com", FirstName = "Kristoffer", LastName = "Malapit", Name = "Kristoffer Malapit", Password = "", RoleId = 1, Status = "1", Username = "kcmalapit" }
                    );
                });

            modelBuilder.Entity("FODLSystem.Models.Department", b =>
                {
                    b.HasOne("FODLSystem.Models.Company", "Companies")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FODLSystem.Models.Dispenser", b =>
                {
                    b.HasOne("FODLSystem.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationCode");
                });

            modelBuilder.Entity("FODLSystem.Models.FuelOil", b =>
                {
                    b.HasOne("FODLSystem.Models.Dispenser", "Dispensers")
                        .WithMany()
                        .HasForeignKey("DispenserCode");

                    b.HasOne("FODLSystem.Models.LubeTruck", "LubeTrucks")
                        .WithMany()
                        .HasForeignKey("LubeTruckCode");
                });

            modelBuilder.Entity("FODLSystem.Models.FuelOilDetail", b =>
                {
                    b.HasOne("FODLSystem.Models.Driver", "Drivers")
                        .WithMany()
                        .HasForeignKey("DriverIdNumber");

                    b.HasOne("FODLSystem.Models.Equipment", "Equipments")
                        .WithMany()
                        .HasForeignKey("EquipmentNo");

                    b.HasOne("FODLSystem.Models.FuelOil", "FuelOils")
                        .WithMany("FuelOilDetail")
                        .HasForeignKey("FuelOilId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FODLSystem.Models.Location", "Locations")
                        .WithMany()
                        .HasForeignKey("LocationNo");
                });

            modelBuilder.Entity("FODLSystem.Models.FuelOilSubDetail", b =>
                {
                    b.HasOne("FODLSystem.Models.Component", "Components")
                        .WithMany()
                        .HasForeignKey("ComponentCode");

                    b.HasOne("FODLSystem.Models.FuelOilDetail", "FuelOilDetails")
                        .WithMany("FuelOilSubDetail")
                        .HasForeignKey("FuelOilDetailId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FODLSystem.Models.Item", "Items")
                        .WithMany()
                        .HasForeignKey("ItemNo");
                });

            modelBuilder.Entity("FODLSystem.Models.LubeTruck", b =>
                {
                    b.HasOne("FODLSystem.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationCode");
                });

            modelBuilder.Entity("FODLSystem.Models.User", b =>
                {
                    b.HasOne("FODLSystem.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentCode");

                    b.HasOne("FODLSystem.Models.Role", "Roles")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
