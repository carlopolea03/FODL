//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EQList
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist", ConfigurationName="EQList.EquipmentList_Port")]
    public interface EquipmentList_Port
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/equipmentlist:Read", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<EQList.Read_Result> ReadAsync(EQList.Read request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/equipmentlist:ReadByRecId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<EQList.ReadByRecId_Result> ReadByRecIdAsync(EQList.ReadByRecId request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/equipmentlist:ReadMultiple", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<EQList.ReadMultiple_Result> ReadMultipleAsync(EQList.ReadMultiple request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/equipmentlist:IsUpdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<EQList.IsUpdated_Result> IsUpdatedAsync(EQList.IsUpdated request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/equipmentlist:GetRecIdFromKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<EQList.GetRecIdFromKey_Result> GetRecIdFromKeyAsync(EQList.GetRecIdFromKey request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist")]
    public partial class EquipmentList
    {
        
        private string keyField;
        
        private string noField;
        
        private string old_IDField;
        
        private string nameField;
        
        private string search_NameField;
        
        private string model_NoField;
        
        private string serial_NoField;
        
        private string engine_Model_NoField;
        
        private string engine_Serial_NoField;
        
        private bool is_In_UseField;
        
        private bool is_In_UseFieldSpecified;
        
        private string machine_LocationField;
        
        private string location_NameField;
        
        private string equipment_TypeField;
        
        private string equipment_NameField;
        
        private Machine_Type machine_TypeField;
        
        private bool machine_TypeFieldSpecified;
        
        private Equipment_Use equipment_UseField;
        
        private bool equipment_UseFieldSpecified;
        
        private string fixed_Asset_CodeField;
        
        private string manufacturerField;
        
        private Type typeField;
        
        private bool typeFieldSpecified;
        
        private string vendor_NoField;
        
        private string maintainanced_ByField;
        
        private string service_VendorField;
        
        private string calibrationField;
        
        private string parent_Machine_ReferenceField;
        
        private string access_GroupField;
        
        private bool sMR_ValidationField;
        
        private bool sMR_ValidationFieldSpecified;
        
        private string equipment_StatusField;
        
        private string equipment_CategoryField;
        
        private bool blockedField;
        
        private bool blockedFieldSpecified;
        
        private string remarksField;
        
        private string dept_CodeField;
        
        private string office_CodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string No
        {
            get
            {
                return this.noField;
            }
            set
            {
                this.noField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Old_ID
        {
            get
            {
                return this.old_IDField;
            }
            set
            {
                this.old_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Search_Name
        {
            get
            {
                return this.search_NameField;
            }
            set
            {
                this.search_NameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Model_No
        {
            get
            {
                return this.model_NoField;
            }
            set
            {
                this.model_NoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Serial_No
        {
            get
            {
                return this.serial_NoField;
            }
            set
            {
                this.serial_NoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Engine_Model_No
        {
            get
            {
                return this.engine_Model_NoField;
            }
            set
            {
                this.engine_Model_NoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Engine_Serial_No
        {
            get
            {
                return this.engine_Serial_NoField;
            }
            set
            {
                this.engine_Serial_NoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool Is_In_Use
        {
            get
            {
                return this.is_In_UseField;
            }
            set
            {
                this.is_In_UseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Is_In_UseSpecified
        {
            get
            {
                return this.is_In_UseFieldSpecified;
            }
            set
            {
                this.is_In_UseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Machine_Location
        {
            get
            {
                return this.machine_LocationField;
            }
            set
            {
                this.machine_LocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string Location_Name
        {
            get
            {
                return this.location_NameField;
            }
            set
            {
                this.location_NameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Equipment_Type
        {
            get
            {
                return this.equipment_TypeField;
            }
            set
            {
                this.equipment_TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string Equipment_Name
        {
            get
            {
                return this.equipment_NameField;
            }
            set
            {
                this.equipment_NameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public Machine_Type Machine_Type
        {
            get
            {
                return this.machine_TypeField;
            }
            set
            {
                this.machine_TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Machine_TypeSpecified
        {
            get
            {
                return this.machine_TypeFieldSpecified;
            }
            set
            {
                this.machine_TypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public Equipment_Use Equipment_Use
        {
            get
            {
                return this.equipment_UseField;
            }
            set
            {
                this.equipment_UseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Equipment_UseSpecified
        {
            get
            {
                return this.equipment_UseFieldSpecified;
            }
            set
            {
                this.equipment_UseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string Fixed_Asset_Code
        {
            get
            {
                return this.fixed_Asset_CodeField;
            }
            set
            {
                this.fixed_Asset_CodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string Manufacturer
        {
            get
            {
                return this.manufacturerField;
            }
            set
            {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public Type Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified
        {
            get
            {
                return this.typeFieldSpecified;
            }
            set
            {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string Vendor_No
        {
            get
            {
                return this.vendor_NoField;
            }
            set
            {
                this.vendor_NoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string Maintainanced_By
        {
            get
            {
                return this.maintainanced_ByField;
            }
            set
            {
                this.maintainanced_ByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string Service_Vendor
        {
            get
            {
                return this.service_VendorField;
            }
            set
            {
                this.service_VendorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string Calibration
        {
            get
            {
                return this.calibrationField;
            }
            set
            {
                this.calibrationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string Parent_Machine_Reference
        {
            get
            {
                return this.parent_Machine_ReferenceField;
            }
            set
            {
                this.parent_Machine_ReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string Access_Group
        {
            get
            {
                return this.access_GroupField;
            }
            set
            {
                this.access_GroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public bool SMR_Validation
        {
            get
            {
                return this.sMR_ValidationField;
            }
            set
            {
                this.sMR_ValidationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SMR_ValidationSpecified
        {
            get
            {
                return this.sMR_ValidationFieldSpecified;
            }
            set
            {
                this.sMR_ValidationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public string Equipment_Status
        {
            get
            {
                return this.equipment_StatusField;
            }
            set
            {
                this.equipment_StatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public string Equipment_Category
        {
            get
            {
                return this.equipment_CategoryField;
            }
            set
            {
                this.equipment_CategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=28)]
        public bool Blocked
        {
            get
            {
                return this.blockedField;
            }
            set
            {
                this.blockedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlockedSpecified
        {
            get
            {
                return this.blockedFieldSpecified;
            }
            set
            {
                this.blockedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        public string Remarks
        {
            get
            {
                return this.remarksField;
            }
            set
            {
                this.remarksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=30)]
        public string Dept_Code
        {
            get
            {
                return this.dept_CodeField;
            }
            set
            {
                this.dept_CodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=31)]
        public string Office_Code
        {
            get
            {
                return this.office_CodeField;
            }
            set
            {
                this.office_CodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist")]
    public enum Machine_Type
    {
        
        /// <remarks/>
        Production,
        
        /// <remarks/>
        Non_Production,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist")]
    public enum Equipment_Use
    {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        Main_Production,
        
        /// <remarks/>
        Support_Vehicle,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist")]
    public enum Type
    {
        
        /// <remarks/>
        Work_Center,
        
        /// <remarks/>
        Machine_Center,
        
        /// <remarks/>
        _blank_,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist")]
    public partial class EquipmentList_Filter
    {
        
        private EquipmentList_Fields fieldField;
        
        private string criteriaField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public EquipmentList_Fields Field
        {
            get
            {
                return this.fieldField;
            }
            set
            {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Criteria
        {
            get
            {
                return this.criteriaField;
            }
            set
            {
                this.criteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist")]
    public enum EquipmentList_Fields
    {
        
        /// <remarks/>
        No,
        
        /// <remarks/>
        Old_ID,
        
        /// <remarks/>
        Name,
        
        /// <remarks/>
        Search_Name,
        
        /// <remarks/>
        Model_No,
        
        /// <remarks/>
        Serial_No,
        
        /// <remarks/>
        Engine_Model_No,
        
        /// <remarks/>
        Engine_Serial_No,
        
        /// <remarks/>
        Is_In_Use,
        
        /// <remarks/>
        Machine_Location,
        
        /// <remarks/>
        Location_Name,
        
        /// <remarks/>
        Equipment_Type,
        
        /// <remarks/>
        Equipment_Name,
        
        /// <remarks/>
        Machine_Type,
        
        /// <remarks/>
        Equipment_Use,
        
        /// <remarks/>
        Fixed_Asset_Code,
        
        /// <remarks/>
        Manufacturer,
        
        /// <remarks/>
        Type,
        
        /// <remarks/>
        Vendor_No,
        
        /// <remarks/>
        Maintainanced_By,
        
        /// <remarks/>
        Service_Vendor,
        
        /// <remarks/>
        Calibration,
        
        /// <remarks/>
        Parent_Machine_Reference,
        
        /// <remarks/>
        Access_Group,
        
        /// <remarks/>
        SMR_Validation,
        
        /// <remarks/>
        Equipment_Status,
        
        /// <remarks/>
        Equipment_Category,
        
        /// <remarks/>
        Blocked,
        
        /// <remarks/>
        Remarks,
        
        /// <remarks/>
        Dept_Code,
        
        /// <remarks/>
        Office_Code,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Read", WrapperNamespace="urn:microsoft-dynamics-schemas/page/equipmentlist", IsWrapped=true)]
    public partial class Read
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist", Order=0)]
        public string No;
        
        public Read()
        {
        }
        
        public Read(string No)
        {
            this.No = No;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Read_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/equipmentlist", IsWrapped=true)]
    public partial class Read_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist", Order=0)]
        public EQList.EquipmentList EquipmentList;
        
        public Read_Result()
        {
        }
        
        public Read_Result(EQList.EquipmentList EquipmentList)
        {
            this.EquipmentList = EquipmentList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReadByRecId", WrapperNamespace="urn:microsoft-dynamics-schemas/page/equipmentlist", IsWrapped=true)]
    public partial class ReadByRecId
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist", Order=0)]
        public string recId;
        
        public ReadByRecId()
        {
        }
        
        public ReadByRecId(string recId)
        {
            this.recId = recId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReadByRecId_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/equipmentlist", IsWrapped=true)]
    public partial class ReadByRecId_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist", Order=0)]
        public EQList.EquipmentList EquipmentList;
        
        public ReadByRecId_Result()
        {
        }
        
        public ReadByRecId_Result(EQList.EquipmentList EquipmentList)
        {
            this.EquipmentList = EquipmentList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReadMultiple", WrapperNamespace="urn:microsoft-dynamics-schemas/page/equipmentlist", IsWrapped=true)]
    public partial class ReadMultiple
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("filter")]
        public EQList.EquipmentList_Filter[] filter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist", Order=1)]
        public string bookmarkKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist", Order=2)]
        public int setSize;
        
        public ReadMultiple()
        {
        }
        
        public ReadMultiple(EQList.EquipmentList_Filter[] filter, string bookmarkKey, int setSize)
        {
            this.filter = filter;
            this.bookmarkKey = bookmarkKey;
            this.setSize = setSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReadMultiple_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/equipmentlist", IsWrapped=true)]
    public partial class ReadMultiple_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReadMultiple_Result", Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public EQList.EquipmentList[] ReadMultiple_Result1;
        
        public ReadMultiple_Result()
        {
        }
        
        public ReadMultiple_Result(EQList.EquipmentList[] ReadMultiple_Result1)
        {
            this.ReadMultiple_Result1 = ReadMultiple_Result1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsUpdated", WrapperNamespace="urn:microsoft-dynamics-schemas/page/equipmentlist", IsWrapped=true)]
    public partial class IsUpdated
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist", Order=0)]
        public string Key;
        
        public IsUpdated()
        {
        }
        
        public IsUpdated(string Key)
        {
            this.Key = Key;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsUpdated_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/equipmentlist", IsWrapped=true)]
    public partial class IsUpdated_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsUpdated_Result", Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist", Order=0)]
        public bool IsUpdated_Result1;
        
        public IsUpdated_Result()
        {
        }
        
        public IsUpdated_Result(bool IsUpdated_Result1)
        {
            this.IsUpdated_Result1 = IsUpdated_Result1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRecIdFromKey", WrapperNamespace="urn:microsoft-dynamics-schemas/page/equipmentlist", IsWrapped=true)]
    public partial class GetRecIdFromKey
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist", Order=0)]
        public string Key;
        
        public GetRecIdFromKey()
        {
        }
        
        public GetRecIdFromKey(string Key)
        {
            this.Key = Key;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRecIdFromKey_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/equipmentlist", IsWrapped=true)]
    public partial class GetRecIdFromKey_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRecIdFromKey_Result", Namespace="urn:microsoft-dynamics-schemas/page/equipmentlist", Order=0)]
        public string GetRecIdFromKey_Result1;
        
        public GetRecIdFromKey_Result()
        {
        }
        
        public GetRecIdFromKey_Result(string GetRecIdFromKey_Result1)
        {
            this.GetRecIdFromKey_Result1 = GetRecIdFromKey_Result1;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface EquipmentList_PortChannel : EQList.EquipmentList_Port, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class EquipmentList_PortClient : System.ServiceModel.ClientBase<EQList.EquipmentList_Port>, EQList.EquipmentList_Port
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public EquipmentList_PortClient() : 
                base(EquipmentList_PortClient.GetDefaultBinding(), EquipmentList_PortClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.EquipmentList_Port.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EquipmentList_PortClient(EndpointConfiguration endpointConfiguration) : 
                base(EquipmentList_PortClient.GetBindingForEndpoint(endpointConfiguration), EquipmentList_PortClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EquipmentList_PortClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(EquipmentList_PortClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EquipmentList_PortClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(EquipmentList_PortClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EquipmentList_PortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EQList.Read_Result> EQList.EquipmentList_Port.ReadAsync(EQList.Read request)
        {
            return base.Channel.ReadAsync(request);
        }
        
        public System.Threading.Tasks.Task<EQList.Read_Result> ReadAsync(string No)
        {
            EQList.Read inValue = new EQList.Read();
            inValue.No = No;
            return ((EQList.EquipmentList_Port)(this)).ReadAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EQList.ReadByRecId_Result> EQList.EquipmentList_Port.ReadByRecIdAsync(EQList.ReadByRecId request)
        {
            return base.Channel.ReadByRecIdAsync(request);
        }
        
        public System.Threading.Tasks.Task<EQList.ReadByRecId_Result> ReadByRecIdAsync(string recId)
        {
            EQList.ReadByRecId inValue = new EQList.ReadByRecId();
            inValue.recId = recId;
            return ((EQList.EquipmentList_Port)(this)).ReadByRecIdAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EQList.ReadMultiple_Result> EQList.EquipmentList_Port.ReadMultipleAsync(EQList.ReadMultiple request)
        {
            return base.Channel.ReadMultipleAsync(request);
        }
        
        public System.Threading.Tasks.Task<EQList.ReadMultiple_Result> ReadMultipleAsync(EQList.EquipmentList_Filter[] filter, string bookmarkKey, int setSize)
        {
            EQList.ReadMultiple inValue = new EQList.ReadMultiple();
            inValue.filter = filter;
            inValue.bookmarkKey = bookmarkKey;
            inValue.setSize = setSize;
            return ((EQList.EquipmentList_Port)(this)).ReadMultipleAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EQList.IsUpdated_Result> EQList.EquipmentList_Port.IsUpdatedAsync(EQList.IsUpdated request)
        {
            return base.Channel.IsUpdatedAsync(request);
        }
        
        public System.Threading.Tasks.Task<EQList.IsUpdated_Result> IsUpdatedAsync(string Key)
        {
            EQList.IsUpdated inValue = new EQList.IsUpdated();
            inValue.Key = Key;
            return ((EQList.EquipmentList_Port)(this)).IsUpdatedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EQList.GetRecIdFromKey_Result> EQList.EquipmentList_Port.GetRecIdFromKeyAsync(EQList.GetRecIdFromKey request)
        {
            return base.Channel.GetRecIdFromKeyAsync(request);
        }
        
        public System.Threading.Tasks.Task<EQList.GetRecIdFromKey_Result> GetRecIdFromKeyAsync(string Key)
        {
            EQList.GetRecIdFromKey inValue = new EQList.GetRecIdFromKey();
            inValue.Key = Key;
            return ((EQList.EquipmentList_Port)(this)).GetRecIdFromKeyAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.EquipmentList_Port))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.EquipmentList_Port))
            {
                return new System.ServiceModel.EndpointAddress("http://aprodite.semiraramining.net:7057/BC130_SMPC_TEST/WS/Semirara/Page/Equipmen" +
                        "tList");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return EquipmentList_PortClient.GetBindingForEndpoint(EndpointConfiguration.EquipmentList_Port);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return EquipmentList_PortClient.GetEndpointAddress(EndpointConfiguration.EquipmentList_Port);
        }
        
        public enum EndpointConfiguration
        {
            
            EquipmentList_Port,
        }
    }
}
