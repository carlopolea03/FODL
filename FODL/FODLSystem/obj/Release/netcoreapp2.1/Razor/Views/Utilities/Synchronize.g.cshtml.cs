#pragma checksum "E:\Projects\FODL\FODL\FODLSystem\Views\Utilities\Synchronize.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "be5d27714c54baf58863dc505682f4fb1892f90e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Utilities_Synchronize), @"mvc.1.0.view", @"/Views/Utilities/Synchronize.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Utilities/Synchronize.cshtml", typeof(AspNetCore.Views_Utilities_Synchronize))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\Projects\FODL\FODL\FODLSystem\Views\_ViewImports.cshtml"
using FODLSystem;

#line default
#line hidden
#line 2 "E:\Projects\FODL\FODL\FODLSystem\Views\_ViewImports.cshtml"
using FODLSystem.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"be5d27714c54baf58863dc505682f4fb1892f90e", @"/Views/Utilities/Synchronize.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4ece4c88a6f9d0d3616d5d6ccde3e61c949832c8", @"/Views/_ViewImports.cshtml")]
    public class Views_Utilities_Synchronize : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "E:\Projects\FODL\FODL\FODLSystem\Views\Utilities\Synchronize.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
            BeginContext(43, 1623, true);
            WriteLiteral(@"<style>
    /* Mimic table appearance */
    #fileuploaddiv.table {
        display: table;
    }

        #fileuploaddiv.table .file-row {
            display: table-row;
        }

            #fileuploaddiv.table .file-row > #fileuploaddiv {
                display: table-cell;
                vertical-align: top;
                border-top: 1px solid #ddd;
                padding: 8px;
            }

            #fileuploaddiv.table .file-row:nth-child(odd) {
                background: #f9f9f9;
            }



    /* The total progress gets shown by event listeners */
    #total-progress {
        opacity: 0;
        transition: opacity 0.3s linear;
    }

    /* Hide the progress bar when finished */
    #previews .file-row.dz-success .progress {
        opacity: 0;
        transition: opacity 0.3s linear;
    }

    /* Hide the delete button initially */
    #previews .file-row .delete {
        display: none;
    }

    /* Hide the start and cancel buttons and ");
            WriteLiteral(@"show the delete button */

    #previews .file-row.dz-success .start,
    #previews .file-row.dz-success .cancel {
        display: none;
    }

    #previews .file-row.dz-success .delete {
        display: block;
    }

    .error_response {
        color: red;
    }

    .success_response {
        color: darkgreen;
    }
</style>

<div class=""row wrapper border-bottom white-bg page-heading"">
    <div class=""col-lg-11"">
        <h2>
            Synchronization
        </h2>
        <ol class=""breadcrumb"">
            <li class=""breadcrumb-item"">
                <a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 1666, "\"", 1700, 1);
#line 72 "E:\Projects\FODL\FODL\FODLSystem\Views\Utilities\Synchronize.cshtml"
WriteAttributeValue("", 1673, Url.Action("Index","Home"), 1673, 27, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1701, 836, true);
            WriteLiteral(@">Home</a>
            </li>
            <li class=""breadcrumb-item"">
                <a>Fuel Oil Liquidation</a>
            </li>
            <li class=""breadcrumb-item active"">
                <strong>
                    Synchronization
                </strong>
            </li>
        </ol>
    </div>
</div>
<div class=""wrapper wrapper-content animated fadeInRight"">
    <div class=""row"">
        <div class=""col-lg-5"">
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <h5>
                        Data
                    </h5>
                    <div class=""ibox-tools"">
                        <a class=""collapse-link"">
                            <i class=""fa fa-chevron-up""></i>
                        </a>
                        <a class=""close-link""");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 2537, "\"", 2571, 1);
#line 97 "E:\Projects\FODL\FODL\FODLSystem\Views\Utilities\Synchronize.cshtml"
WriteAttributeValue("", 2544, Url.Action("Index","Home"), 2544, 27, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2572, 472, true);
            WriteLiteral(@">
                            <i class=""fa fa-times""></i>
                        </a>
                    </div>
                </div>
                <div class=""ibox-content"">
                    <a href=""#"" class=""anchorAction btn btn-success btn-bitbucket"" id=""btnExportExcel"">
                        <i class=""fa fa-download""></i>
                        <span class=""email-text"">&nbsp;Download Data For Synchronization</span>
                    </a>

");
            EndContext();
#line 108 "E:\Projects\FODL\FODL\FODLSystem\Views\Utilities\Synchronize.cshtml"
                     if (User.Identity.GetRoleName() != "User")
                    {

#line default
#line hidden
            BeginContext(3136, 1, true);
            WriteLiteral("|");
            EndContext();
            BeginContext(3144, 274, true);
            WriteLiteral(@"
                    <a href=""#"" id=""btnAdd"" class=""anchorAction btn btn-primary btn-bitbucket"">
                        <i class=""fa fa-upload""></i>
                        <span class=""email-text"">&nbsp;Upload Data For Synchronization</span>
                    </a>
");
            EndContext();
#line 114 "E:\Projects\FODL\FODL\FODLSystem\Views\Utilities\Synchronize.cshtml"

                }

#line default
#line hidden
            BeginContext(3439, 4114, true);
            WriteLiteral(@"                </div>
            </div>
        </div>
    </div>
</div>
<div id=""itemsModal"" class=""modal inmodal in"" role=""dialog"" data-backdrop=""static"" data-keyboard=""false"">
    <div class=""modal-dialog modal-lg"">
        <div class=""modal-content animated fadeIn"">
            <div class=""modal-header"">

                <h4 class=""modal-title"">Files</h4>
                <small class=""font-bold"">List of files to be uploaded</small>
            </div>
            <div class=""modal-body"" id=""fileuploaddiv"">
                <div id=""actions"" class=""row"">
                    <div class=""col-lg-7"">

                        <span class=""btn btn-success fileinput-button dz-clickable"">
                            <i class=""glyphicon glyphicon-plus""></i>
                            <span>Add files...</span>
                        </span>
                        <button type=""submit"" class=""btn btn-primary start"" style=""display:none;"">
                            <i class=""fa fa-upload""></i");
            WriteLiteral(@">&nbsp;
                            <span>Start upload</span>
                        </button>
                        <button type=""reset"" class=""btn btn-warning cancel"" style=""display:none;"">
                            <i class=""glyphicon glyphicon-ban-circle""></i>
                            <span>Cancel upload</span>
                        </button>
                    </div>

                    <div class=""col-lg-5"">
                        <!-- The global file processing state -->
                        <div class=""fileupload-process"">
                            <div id=""total-progress"" class=""progress progress-striped active"" role=""progressbar"" aria-valuemin=""0"" aria-valuemax=""100"" aria-valuenow=""0"">
                                <div class=""progress-bar progress-bar-success"" style=""width:0%;"" data-dz-uploadprogress=""""></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""table tab");
            WriteLiteral(@"le-striped files"" id=""previews"">
                    <div id=""template"" class=""file-row dz-image-preview"">
                        <!-- This is used as the file preview template -->
                        <div>
                            <span class=""preview""><img data-dz-thumbnail></span>
                        </div>
                        <div>
                            <p class=""name"" data-dz-name></p>
                            <strong class=""error text-danger"" data-dz-errormessage></strong>
                        </div>
                        <div>
                            <p class=""size"" data-dz-size></p>
                            <div class=""progress progress-striped active"" role=""progressbar"" aria-valuemin=""0"" aria-valuemax=""100"" aria-valuenow=""0"">
                                <div class=""progress-bar progress-bar-success"" style=""width:0%;"" data-dz-uploadprogress></div>
                            </div>
                        </div>
                        <div>
  ");
            WriteLiteral(@"                          <button class=""btn btn-primary start"" onclick=""setstatId();"">
                                <i class=""glyphicon glyphicon-upload""></i>
                                <span>Start</span>
                            </button>
                            <button data-dz-remove class=""btn btn-warning cancel"">
                                <i class=""glyphicon glyphicon-ban-circle""></i>
                                <span>Cancel</span>
                            </button>
                            <label class=""delete dropinfo""></label>
                        </div>
                    </div>
                </div>
            </div>

            <div class=""modal-footer"">

                <div class=""card-body"" style=""padding:0px!important;"">



                    <button type=""button"" id=""btnCloseItems"" class=""btn btn-default"" data-dismiss=""modal"" onclick=""location.reload();"">Close</button>
                </div>

            </div>
        </div>
    ");
            WriteLiteral("</div>\r\n</div>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(7570, 511, true);
                WriteLiteral(@"

    <script>
    $('#btnAdd').click(function () {
        $(""#itemsModal"").modal('show')
    })
    $(function () {
        dropzne();
    })
    function dropzne() {

        var previewNode = document.querySelector(""#template"");
        previewNode.id = """";
        var previewTemplate = previewNode.parentNode.innerHTML;
        previewNode.parentNode.removeChild(previewNode);

        var myDropzone = new Dropzone(""#fileuploaddiv"", { // Make the whole body a dropzone
            url: """);
                EndContext();
                BeginContext(8082, 25, false);
#line 218 "E:\Projects\FODL\FODL\FODLSystem\Views\Utilities\Synchronize.cshtml"
             Write(Url.Action("UploadExcel"));

#line default
#line hidden
                EndContext();
                BeginContext(8107, 3213, true);
                WriteLiteral(@""", // Set the url
            thumbnailWidth: 80,
            thumbnailHeight: 80,
            parallelUploads: 20,
            previewTemplate: previewTemplate,
            autoQueue: false, // Make sure the files aren't queued until manually added
            previewsContainer: ""#previews"", // Define the container to display the previews
            clickable: "".fileinput-button"" // Define the element that should be used as click trigger to select files.
        });

        myDropzone.on(""addedfile"", function (file) {

            // Hookup the start button
            file.previewElement.querySelector("".start"").onclick = function () { myDropzone.enqueueFile(file); };

        });

        // Update the total progress bar
        myDropzone.on(""totaluploadprogress"", function (progress) {
            document.querySelector(""#total-progress .progress-bar"").style.width = progress + ""%"";
        });

        myDropzone.on(""sending"", function (file) {
            // Show the total progres");
                WriteLiteral(@"s bar when upload starts
            document.querySelector(""#total-progress"").style.opacity = ""1"";
            // And disable the start button
            file.previewElement.querySelector("".start"").setAttribute(""disabled"", ""disabled"");
        });

        // Hide the total progress bar when nothing's uploading anymore
        myDropzone.on(""queuecomplete"", function (progress) {
            document.querySelector(""#total-progress"").style.opacity = ""0"";

        });

        myDropzone.on(""success"", function (file, response) {
            console.log(file.previewElement); //kcm
            console.log($(file.previewElement).find("".dropinfo"")); //kcm

            var el = $(file.previewElement).find("".dropinfo"");

            console.log(response.status);
            if (response.status == ""success"") {
                el.addClass(""success_response"").html(response.message);
            } else {
                el.addClass(""error_response"").html(response.message + ""\r\n Please check file t");
                WriteLiteral(@"ype or filename."");
            }

            console.log(response); //kcm


        });
        myDropzone.on(""error"", function (file, response) {
            console.log(file.previewElement); //kcm
            console.log($(file.previewElement).find("".dropinfo"")); //kcm

            var el = $(file.previewElement).find("".dropinfo"");



            el.addClass(""error_response"").html(response.message + ""\r\n Please check file type or filename."");





        });

        // Setup the buttons for all transfers
        // The ""add files"" button doesn't need to be setup because the config
        // `clickable` has already been specified.
        document.querySelector(""#actions .start"").onclick = function () {

            myDropzone.enqueueFiles(myDropzone.getFilesWithStatus(Dropzone.ADDED));



        };
        document.querySelector(""#actions .cancel"").onclick = function () {
            myDropzone.removeAllFiles(true);

        };
    }

    $(""#btnExportExcel"").cl");
                WriteLiteral("ick(function () {\r\n        //if (confirm(\'This will download all data and will be move to archived. Continue?\')) {\r\n            window.open(\'");
                EndContext();
                BeginContext(11321, 27, false);
#line 304 "E:\Projects\FODL\FODL\FODLSystem\Views\Utilities\Synchronize.cshtml"
                    Write(Url.Action("DownloadExcel"));

#line default
#line hidden
                EndContext();
                BeginContext(11348, 41, true);
                WriteLiteral("\');\r\n        //}\r\n    })\r\n    </script>\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
